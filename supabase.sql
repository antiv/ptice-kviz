-- Kreiranje tabele za podesavanja aplikacije
CREATE TABLE app_settings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  setting_key TEXT NOT NULL UNIQUE,
  setting_value JSONB NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Dodavanje podesavanja za zvanični test
INSERT INTO app_settings (setting_key, setting_value) VALUES 
('official_test_active', '{"active": false, "start_date": null, "end_date": null}');

-- Kreiranje tabele za ptice
CREATE TABLE ptice (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  naziv_srpskom TEXT NOT NULL,
  naziv_latinskom TEXT NOT NULL UNIQUE,
  grupa INT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Kreiranje tabele za rezultate kviza
CREATE TABLE rezultati_kviza (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  broj_pitanja INT NOT NULL,
  rezultat JSONB NOT NULL, -- { "questions": [...], "userAnswers": [...], "score": 10 }
  poeni INT NOT NULL,
  user_email TEXT, -- Email korisnika koji je radio kviz
  zvanican_test BOOLEAN DEFAULT FALSE -- Da li je ovo zvanični test
);

-- Kreiranje tabele za dozvoljene email adrese
CREATE TABLE allowed_users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email TEXT NOT NULL UNIQUE,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Dodavanje početnih korisnika
INSERT INTO allowed_users (email) VALUES 
('admin@example.com'),
('ivan.antonijevic@example.com');

-- Omogucavanje Realtime za tabele (opciono, ali korisno)
ALTER TABLE ptice REPLICA IDENTITY FULL;
ALTER TABLE rezultati_kviza REPLICA IDENTITY FULL;

-- Politike pristupa za tabelu "ptice"
-- Omogucava svima da citaju podatke iz tabele "ptice"
CREATE POLICY "Public Read Access for ptice"
ON ptice
FOR SELECT
USING (true);

-- Politike pristupa za tabelu "rezultati_kviza"
-- Omogucava samo autentifikovanim korisnicima da unose rezultate
CREATE POLICY "Authenticated users can insert quiz results"
ON rezultati_kviza
FOR INSERT
WITH CHECK (auth.role() = 'authenticated');

-- Politike pristupa za tabelu "app_settings"
-- Omogucava svima da citaju podesavanja
CREATE POLICY "Public Read Access for app_settings"
ON app_settings
FOR SELECT
USING (true);

-- Omogucava samo admin korisnicima da menjaju podesavanja
CREATE POLICY "Admin users can update app_settings"
ON app_settings
FOR UPDATE
USING (auth.role() = 'authenticated' AND auth.jwt() ->> 'email' = 'admin@example.com');

-- Politike pristupa za tabelu "allowed_users"
-- Omogucava svima da citaju dozvoljene emaile (potrebno za proveru autorizacije)
CREATE POLICY "Public Read Access for allowed_users"
ON allowed_users
FOR SELECT
USING (true);

-- Omogucava samo adminu da dodaje korisnike
CREATE POLICY "Admin can insert allowed users"
ON allowed_users
FOR INSERT
WITH CHECK (auth.role() = 'authenticated' AND auth.jwt() ->> 'email' = 'admin@example.com');

-- Omogucava samo adminu da briše korisnike
CREATE POLICY "Admin can delete allowed users"
ON allowed_users
FOR DELETE
USING (auth.role() = 'authenticated' AND auth.jwt() ->> 'email' = 'admin@example.com');
